#include <iostream>
#include <vector>
using namespace std;

// Merge Sort
void merge(vector<int>& arr, int left, int right) {
    if (left >= right) return;
    int mid = left + (right - left) / 2;
    merge(arr, left, mid);
    merge(arr, mid + 1, right);

    vector<int> temp(right - left + 1);
    int i = left, j = mid + 1, k = 0;

    while (i <= mid && j <= right) {
        if (arr[i] <= arr[j]) temp[k++] = arr[i++];
        else temp[k++] = arr[j++];
    }

    while (i <= mid) temp[k++] = arr[i++];
    while (j <= right) temp[k++] = arr[j++];
    for (int i = 0; i < temp.size(); i++) arr[left + i] = temp[i];
}

// Quick Sort
int partition(vector<int>& arr, int low, int high) {
    int pivot = arr[high];
    int i = low - 1;
    for (int j = low; j < high; j++) {
        if (arr[j] < pivot) {
            i++;
            swap(arr[i], arr[j]);
        }
    }
    swap(arr[i + 1], arr[high]);
    return i + 1;
}

void quickSort(vector<int>& arr, int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);
        quickSort(arr, low, pi - 1);
        quickSort(arr, pi + 1, high);
    }
}

// Bubble Sort
void bubbleSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = 0; i < n - 1; i++) {
        for (int j = 0; j < n - i - 1; j++) {
            if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);
        }
    }
}

// Selection Sort
void selectionSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = 0; i < n - 1; i++) {
        int minIdx = i;
        for (int j = i + 1; j < n; j++) {
            if (arr[j] < arr[minIdx]) minIdx = j;
        }
        swap(arr[i], arr[minIdx]);
    }
}

// Insertion Sort
void insertionSort(vector<int>& arr) {
    int n = arr.size();
    for (int i = 1; i < n; i++) {
        int key = arr[i];
        int j = i - 1;
        while (j >= 0 && arr[j] > key) {
            arr[j + 1] = arr[j];
            j--;
        }
        arr[j + 1] = key;
    }
}

int main() {
    vector<int> arr = {64, 25, 12, 22, 11};

    // Merge Sort
    merge(arr, 0, arr.size() - 1);
    cout << "Merge Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    // Quick Sort
    arr = {64, 25, 12, 22, 11};
    quickSort(arr, 0, arr.size() - 1);
    cout << "Quick Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    // Bubble Sort
    arr = {64, 25, 12, 22, 11};
    bubbleSort(arr);
    cout << "Bubble Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    // Selection Sort
    arr = {64, 25, 12, 22, 11};
    selectionSort(arr);
    cout << "Selection Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    // Insertion Sort
    arr = {64, 25, 12, 22, 11};
    insertionSort(arr);
    cout << "Insertion Sorted Array: ";
    for (int num : arr) cout << num << " ";
    cout << endl;

    return 0;
}
